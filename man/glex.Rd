% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/glex.R
\name{glex}
\alias{glex}
\alias{glex.rpf}
\alias{glex.xgb.Booster}
\alias{glex.ranger}
\title{Global explanations for tree-based models.}
\usage{
glex(
  object,
  x,
  max_interaction = NULL,
  features = NULL,
  probFunction = NULL,
  ...
)

\method{glex}{rpf}(object, x, max_interaction = NULL, features = NULL, ...)

\method{glex}{xgb.Booster}(
  object,
  x,
  max_interaction = NULL,
  features = NULL,
  probFunction = NULL,
  ...
)

\method{glex}{ranger}(
  object,
  x,
  max_interaction = NULL,
  features = NULL,
  probFunction = NULL,
  ...
)
}
\arguments{
\item{object}{Model to be explained, either of class \code{xgb.Booster} or \code{rpf}.}

\item{x}{Data to be explained.}

\item{max_interaction}{(\code{integer(1): NULL})\cr
Maximum interaction size to consider.
Defaults to using all possible interactions available in the model.\cr
For \code{\link[xgboost:xgb.train]{xgboost}}, this defaults to the \code{max_depth} parameter of the model fit.\cr
If not set in \code{xgboost}, the default value of \code{6} is assumed.}

\item{features}{Vector of column names in x to calculate components for. If \code{NULL}, all features are used.}

\item{probFunction}{Either "path-dependent" to use old path-dependent weighting of leaves or a user specified probability function of the signature function(coords, lb, ub). If left null, the empirical marginal probabilities will be used}

\item{...}{Further arguments passed to methods.}
}
\value{
Decomposition of the regression or classification function.
A \code{list} with elements:
\itemize{
\item \code{shap}: SHAP values (\code{xgboost} method only).
\item \code{m}: Functional decomposition into all main and interaction
components in the model, up to the degree specified by \code{max_interaction}.
The variable names correspond to the original variable names,
with \code{:} separating interaction terms as one would specify in a \code{\link{formula}} interface.
\item \code{intercept}: Intercept term, the expected value of the prediction.
}
}
\description{
Global explanations for tree-based models by decomposing
regression or classification functions into the sum of main components and
interaction components of arbitrary order. Calculates SHAP values and
q-interaction SHAP for all values of q for tree-based models such as xgboost.
}
\details{
For parallel execution using \code{xgboost} models, register a backend, e.g. with
\code{doParallel::registerDoParallel()}.
}
\examples{

# Random Planted Forest -----
if (requireNamespace("randomPlantedForest", quietly = TRUE)) {
library(randomPlantedForest)

rp <- rpf(mpg ~ ., data = mtcars[1:26, ], max_interaction = 2)

glex_rpf <- glex(rp, mtcars[27:32, ])
str(glex_rpf, list.len = 5)
}
# xgboost -----
if (requireNamespace("xgboost", quietly = TRUE)) {
library(xgboost)
x <- as.matrix(mtcars[, -1])
y <- mtcars$mpg
xg <- xgboost(data = x[1:26, ], label = y[1:26],
              params = list(max_depth = 4, eta = .1),
              nrounds = 10, verbose = 0)
glex(xg, x[27:32, ])

\dontrun{
# Parallel execution
doParallel::registerDoParallel()
glex(xg, x[27:32, ])
}
}
# ranger -----
if (requireNamespace("ranger", quietly = TRUE)) {
library(ranger)
x <- as.matrix(mtcars[, -1])
y <- mtcars$mpg
rf <- ranger(x = x[1:26, ], y = y[1:26],
             num.trees = 5, max.depth = 3, 
             node.stats = TRUE)
glex(rf, x[27:32, ])

\dontrun{
# Parallel execution
doParallel::registerDoParallel()
glex(rf, x[27:32, ])
}
}
}
